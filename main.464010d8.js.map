{"version":3,"sources":["scripts/main.js"],"names":["listUl","document","querySelector","collectionOfListEmployees","querySelectorAll","sortList","list","sortCollection","sort","a","b","dataset","salary","replace","li","append","getEmployees","map","employee","name","innerText"],"mappings":";AAAA,aAsBA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApBA,IAAMA,EAASC,SAASC,cAAc,MAChCC,EAA4BF,SAASG,iBAAiB,MAE5D,SAASC,EAASC,GACVC,IADgB,EAKLA,EAAAA,EAJM,EAAID,GAAME,KAAK,SAACC,EAAGC,GACxC,OAAEA,EAAEC,QAAQC,OAAOC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KAC7CJ,EAAEE,QAAQC,OAAOC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,OAH/B,IAKW,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAtBC,IAAAA,EAAsB,EAAA,MAC/Bd,EAAOe,OAAOD,IANM,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAUxB,SAASE,EAAaV,GACb,OAAA,EAAIA,GAAMW,IAAI,SAAAC,GACnBA,EAASP,QAAQQ,KAAOD,EAASE,YAIrCf,EAASF,GACTa,EAAab","file":"main.464010d8.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst listUl = document.querySelector('ul');\nconst collectionOfListEmployees = document.querySelectorAll('li');\n\nfunction sortList(list) {\n  const sortCollection = [...list].sort((a, b) =>\n    +(b.dataset.salary.replace('$', '').replace(',', ''))\n    - +(a.dataset.salary.replace('$', '').replace(',', '')));\n\n  for (const li of sortCollection) {\n    listUl.append(li);\n  }\n}\n\nfunction getEmployees(list) {\n  return [...list].map(employee => {\n    employee.dataset.name = employee.innerText;\n  });\n}\n\nsortList(collectionOfListEmployees);\ngetEmployees(collectionOfListEmployees);\n"]}